#!/usr/bin/sh

# Description: Print (nerd)icons in front of list of directories/files

# Dependencies: awk, nerd patched font

# Usage
#    1. Set colors and/or icons to your liking
#    2. Make sure the script is in your PATH
#    3. Pipe any directory listing to iconlookup and it will output prepended icons
#    4. Aditionally you can consider adding it to your FZF_DEFAULT_COMMAND to make
#       it work with fzf (make sure you also add --ansi to your FZF_DEFAULT_OPTS)

# Author: Luuk van Baal

icon_lookup() {
awk 'BEGIN { FS="." }
{
    if ($0 ~/^\.$/)
        next
    ent[NR] = $0
    ext[NR] = $NF
    matched[NR] = ""
}
END {
# Set your ANSI colorscheme below (https://en.wikipedia.org/wiki/ANSI_escape_code#Colors).
# Default uses 8 bit nord theme colors(in no particular order) (24 bit commented out).
 colordepth=8        #colordepth=24
 color_default=111   #color_default="129;161;193"
 color_video=110     #color_video="136;192;208"
 color_audio=150     #color_audio="163;190;140"
 color_image=150     #color_image="163;190;140"
 color_docs=173      #color_docs="208;135;112"
 color_archive=179   #color_archive="235;203;139"
 color_c=150         #color_c="163;190;140"
 color_java=139      #color_java="180;142;173"
 color_js=109        #color_js="143;188;187"
 color_react=111     #color_react="129;161;193"
 color_css=110       #color_css="136;192;208"
 color_python=68     #color_python="94;129;172"
 color_lua=167       #color_lua="191;97;106"
 color_document=173  #color_document="208;135;112"
 color_fsharp=179    #color_fsharp="180;142;173"
 color_ruby=150      #color_ruby="163;190;140"
 color_scala=139     #color_scala="143;188;187"
 color_vim=109       #color_vim="143;188;187"

    switch (colordepth) {
        case "4":
            escape="\033["
            break;
        case "8":
            escape="\033[38;5;"
            break;
        case "24":
            escape="\033[38;2;"
            break;
    }

    color_default = color_default
    color_video = color_video
    color_audio = color_audio
    color_image = color_image
    color_docs = color_docs
    color_archive = color_archive
    color_c = color_c
    color_java = color_java
    color_js = color_js
    color_react = color_react
    color_css = color_css
    color_python = color_python
    color_lua = color_lua
    color_document = color_document
    color_fsharp = color_fsharp
    color_ruby = color_ruby
    color_scala = color_scala
    color_vim = color_vim

    icons["directory"] = "" "/" color_default
    icons["file"] = "" "/" color_default
    icons["exec"] = "" "/" color_default
    icons["manual"] = "" "/" color_docs
    icons["pipe"] = "ﳣ" "/" color_default
    icons["socket"] = "ﳧ" "/" color_default
    icons["door"] = "➡" "/" color_default

# top level and common icons
    icons[".git"] = "" "/" color_default
    icons["desktop"] = "ﲾ" "/" color_default
    icons["briefcase"] = "" "/" color_default
    icons["document"] = "" "/" color_default
    icons["downloads"] = "" "/" color_default
    icons["music"] = "" "/" color_default
    icons["musicfile"] = "" "/" color_audio
    icons["pictures"] = "" "/" color_default
    icons["picturefile"] = "" "/" color_image
    icons["public"] = "" "/" color_default
    icons["templates"] = "陼" "/" color_default
    icons["videos"] = "" "/" color_default
    icons["videofile"] = "ﳜ" "/" color_video
    icons["changelog"] = "" "/" color_docs
    icons["configure"] = "" "/" color_default
    icons["license"] = "" "/" color_docs
    icons["makefile"] = "" "/" color_default
    icons["archive"] = "遲" "/" color_archive
    icons["script"] = "" "/" color_default
    icons["cplusplus"] = "" "/" color_c
    icons["java"] = "" "/" color_java
    icons["clojure"] = "" "/" color_default
    icons["js"] = "" "/" color_js
    icons["linux"] = "" "/" color_default
    icons["fsharp"] = "" "/" color_fsharp
    icons["ruby"] = "" "/" color_ruby
    icons["c"] = "" "/" color_c
    icons["html"] = "" "/" color_default
    icons["react"] = "" "/" color_react
    icons["python"] = "" "/" color_python
    icons["database"] = "" "/" color_default
    icons["worddoc"] = "" "/" color_document
    icons["playlist"] = "蘿" "/" color_audio
    icons["opticaldisk"] = "ﴞ" "/" color_archive


# numbers
    icons["1"] = icons["manual"]
    icons["7z"] = icons["archive"]

# a
    icons["a"] = icons["manual"]
    icons["apk"] = icons["archive"]
    icons["asm"] = icons["file"]
    icons["aup"] = icons["musicfile"]
    icons["avi"] = icons["videofile"]

# b
    icons["bat"] = icons["script"]
    icons["bin"] = "" "/" color_default
    icons["bmp"] = icons["picturefile"]
    icons["bz2"] = icons["archive"]

# c
    icons["c"] = icons["c"]
    icons["cplusplus"] = icons["cplusplus"]
    icons["cab"] = icons["archive"]
    icons["cbr"] = icons["archive"]
    icons["cbz"] = icons["archive"]
    icons["cc"] = icons["cplusplus"]
    icons["class"] = icons["java"]
    icons["clj"] = icons["clojure"]
    icons["cljc"] = icons["clojure"]
    icons["cljs"] = icons["clojure"]
    icons["cmake"] = icons["makefile"]
    icons["coffee"] = "" "/" color_default
    icons["conf"] = icons["configure"]
    icons["cpio"] = icons["archive"]
    icons["cpp"] = icons["cplusplus"]
    icons["css"] = "" "/" color_css
    icons["cue"] = icons["playlist"]
    icons["cvs"] = icons["configure"]
    icons["cxx"] = icons["cplusplus"]

# d
    icons["db"] = icons["database"]
    icons["deb"] = "" "/" color_archive
    icons["diff"] = "繁" "/" color_default
    icons["dll"] = icons["script"]
    icons["doc"] = icons["worddoc"]
    icons["docx"] = icons["worddoc"]

# e
    icons["ejs"] = icons["js"]
    icons["elf"] = icons["linux"]
    icons["epub"] = icons["manual"]
    icons["exe"] = icons["exec"]

# f
    icons["fsharp"] = icons["fsharp"]
    icons["flac"] = icons["musicfile"]
    icons["flv"] = icons["videofile"]
    icons["fs"] = icons["fsharp"]
    icons["fsi"] = icons["fsharp"]
    icons["fsscript"] = icons["fsharp"]
    icons["fsx"] = icons["fsharp"]

# g
    icons["gem"] = icons["ruby"]
    icons["gif"] = icons["picturefile"]
    icons["go"] = "ﳑ" "/" color_default
    icons["gz"] = icons["archive"]
    icons["gzip"] = icons["archive"]

# h
    icons["h"] = icons["c"]
    icons["hh"] = icons["cplusplus"]
    icons["htaccess"] = icons["configure"]
    icons["htpasswd"] = icons["configure"]
    icons["htm"] = icons["htm"]
    icons["html"] = icons["htm"]
    icons["hxx"] = icons["cplusplus"]

# i
    icons["ico"] = icons["picturefile"]
    icons["img"] = icons["picturefile"]
    icons["ini"] = icons["configure"]
    icons["iso"] = icons["opticaldisc"]

# j
    icons["jar"] = icons["java"]
    icons["java"] = icons["java"]
    icons["jl"] = icons["configure"]
    icons["jpeg"] = icons["picturefile"]
    icons["jpg"] = icons["picturefile"]
    icons["js"] = icons["js"]
    icons["json"] = "ﬥ" "/" color_js
    icons["jsx"] = icons["react"]

# k

# l
    icons["lha"] = icons["archive"]
    icons["ilog"] = icons["document"]
    icons["lua"] = "" "/" color_default
    icons["lzh"] = icons["archive"]
    icons["lzma"] = icons["archive"]

# m
    icons["m4a"] = icons["musicfile"]
    icons["m4v"] = icons["videofile"]
    icons["markdown"] = "" "/" color_docs
    icons["md"] = "" "/" color_docs
    icons["mk"] = icons["makefile"]
    icons["mkv"] = icons["videofile"]
    icons["mov"] = icons["videofile"]
    icons["mp3"] = icons["musicfile"]
    icons["mp4"] = icons["videofile"]
    icons["mpeg"] = icons["videofile"]
    icons["mpg"] = icons["videofile"]
    icons["msi"] = "者" "/" color_default

# n

# o
    icons["o"] = icons["manual"]
    icons["ogg"] = icons["musicfile"]
    icons["odownload"] = icons["download"]
    icons["out"] = icons["linux"]

# p
    icons["part"] = icons["download"]
    icons["patch"] = "繁" "/" color_default
    icons["pdf"] = "" "/" color_docs
    icons["php"] = "" "/" color_default
    icons["png"] = icons["picturefile"]
    icons["ppt"] = "" "/" color_default
    icons["pptx"] = "" "/" color_default
    icons["psb"] = "" "/" color_default
    icons["psd"] = "" "/" color_default
    icons["py"] = icons["python"]
    icons["pyc"] = icons["python"]
    icons["pyd"] = icons["python"]
    icons["pyo"] = icons["python"]

# q

# r
    icons["rar"] = icons["archive"]
    icons["rc"] = icons["configure"]
    icons["rom"] = "" "/" color_default
    icons["rpm"] = icons["archive"]
    icons["rss"] = "參" "/" color_default
    icons["rtf"] = "" "/" color_default

# s
    icons["sass"] = "" "/" color_css
    icons["scss"] = "" "/" color_css
    icons["so"] = icons["manual"]
    icons["scala"] = "" "/" color_scala
    icons["sh"] = icons["script"]
    icons["slim"] = icons["script"]
    icons["sln"] = "" "/" color_default
    icons["sql"] = icons["database"]
    icons["srt"] = "" "/" color_default
    icons["isub"] = "" "/" color_default
    icons["svg"] = icons["picturefile"]

# t
    icons["tar"] = icons["archive"]
    icons["tex"] = "" "/" color_default
    icons["tgz"] = icons["archive"]
    icons["ts"] = "" "/" color_js
    icons["tsx"] = icons["react"]
    icons["txt"] = icons["document"]
    icons["txz"] = icons["archive"]

# u

# v
    icons["vid"] = icons["videofile"]
    icons["vim"] = "" "/" color_vim
    icons["vimrc"] = "" "/" color_vim
    icons["vtt"] =  "" "/" color_default
# w
    icons["wav"] = icons["musicfile"]
    icons["webm"] = icons["videofile"]
    icons["wma"] = icons["videofile"]
    icons["wmv"] = icons["videofile"]

# x
    icons["xbps"] = icons["archive"]" " color_archive
    icons["xhtml"] = icons["htm"]
    icons["xls"] = "" "/" color_default
    icons["xlsx"] = "" "/" color_default
    icons["xml"] = icons["html"]
    icons["xz"] = icons["archive"]

# y
    icons["yaml"] = icons["configure"]
    icons["yml"] = icons["configure"]
# z
    icons["zip"] = icons["archive"]

    j = 0;
    toprocess = $NF

    while (toprocess > 0 && j < length(icons)) {
        for (i in ent) {
            if (ext[i] in icons) {
                matched[i] = icons[ext[i]]
                toprocess--
            }
            j++
        }
    }

# Print icons, set color and bold directories by using ansi escape codes
    for (i in ent)
        if (matched[i] != "")
            printcolor(matched[i] "/" ent[i], "10")
        else
            switch (substr(ent[i], length(ent[i]), 1)) {
                case "/":
                    printcolor(icons["directory"] "/"  ent[i], "1")
                    break;
                case "*":
                    printcolor(icons["exe"] "/"  ent[i], "10")
                    break;
                case "|":
                    printcolor(icons["pipe"] "/"  ent[i], "10")
                    break;
                case "=":
                    printcolor(icons["socket"] "/"  ent[i], "10")
                    break;
                case ">":
                    printcolor(icons["door"] "/"  ent[i], "10")
                    break;
                default:
                    printcolor(icons["file"] "/"  ent[i], "10")
            }
}

function printcolor(s, b) {
    split(s, a, "/")
    printf "\033[0m"
    printf "%s%s;%sm%s %s%sm%s\n", escape, a[2], b, a[1], escape, color_default, a[3]
}'
printf '\033[0m'
}

print_icons() {
    printf 'Used icons and colors:\n'
}

print_before() {
    printf '%s\n' "$1"
}

print_after() {
    printf '%s\n' "$1"
}

show_help() {
    printf 'Icon Lookup\n
Usage:
    iconlookup [options]
    iconlookup -b [string]
    iconlookup -a [string]
    iconlookup (-h | --help)

    Prepend icons to list of files based on extension or appended indicator by ls/tree "-F" flag ("/" for directory, "*" for executable etc.)

Options:
    -h --help -?         Show this screen.
    -a --after           Append string after output.
    -b --before          Prepend string before output.
    -p --print           Print icon table.\n'
}

while :; do
    case $1 in
        -h|-\?|--help)
            show_help
            exit ;;
        -p|--print)
            print_icons
            exit ;;
        -b|--before)
            if [ -n "$2" ]; then
                print_before "$2"
                shift
            else
                printf 'ERROR: "--before" requires a non-empty option argument.\n'
                exit
            fi ;;
        -a|--after)
            if [ -n "$2" ]; then
                after=1
                afterstring="$2"
                shift
            else
                printf 'ERROR: "--after" requires a non-empty option argument.\n'
                exit
            fi ;;
        --)
            shift
            break ;;
        -?*)
            printf 'WARNING: Unknown option ignored: %s\n' "$1" ;;
        *) break ;;
    esac
    shift
done

if [ ! -t 0 ]; then
    icon_lookup
else
    printf 'ERROR: no data provided...\n'
fi

if [ -n "$after" ]; then
    print_after "$afterstring"
fi
